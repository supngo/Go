Postgres:
go get github.com/jackc/pgconn
go get github.com/jackc/pgx/v4
go get github.com/jackc/pgx/v4/stdlib

Encrypt:
go get golang.org/x/crypto/bcrypt

Http
go get github.com/go-chi/chi/v5
go get github.com/go-chi/chi/v5/middleware
go get github.com/go-chi/cors

mongodb:
go get go.mongodb.org/mongo-driver/mongo
go get go.mongodb.org/mongo-driver/mongo/options

rabbitMQ:
go get github.com/rabbitmq/amqp091-go

gRPC:
go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.27
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative logs.proto
go get google.golang.org/grpc
go get google.golang.org/protobuf


docker swarm:
docker build -f broker-service.dockerfile -t thomdock/goms-broker-service:1.0.0 .
docker push thomdock/GoMS-logger-serivce:1.0.0
docker swarm init -> create a manager node
docker swarm join-token manager -> add more manager node
docker swarm join-token worker -> add more worker node
docker swarm --token <Token> -> add worker node
docker stack deploy -c docker-swarm.yml myapp -> deploy
docker service scale myapp_broker-serivce=3 -> scale up
docker service scale myapp_broker-service=1 -> scale down

udpate service
docker service scale myapp_broker-service=2 -> minimize down time
docker service update -- image thomdock/GoMS-broker-service:1.0.1 myapp_broker-service

stop docker swarm:
docker service ls -> list all services in docker swarm
docker service scale myapp_broker-service=0
docker stack rm myapp -> bring down the whole docker swarm
docker swarm leave --force -> leave the swarm

kubernetes:
minikube start --node=2
minikubev status
minikube dashboard

kubectl apply -f k8s
kubectl get pods
kubectl get svc
kubectl get deployment
kubectl delete deploymens mongo rabbitmq
kubectl delete svc mongo rabbitmq
kubectl logs pod-name


LoadBalancer:
kubectl expose deployment broker-service --type=LoadBalancer --port=8080 --target-port=8080
minikube tunnel

ingress (web server: nginx)
minikube addons enable ingress

scale up/down:

